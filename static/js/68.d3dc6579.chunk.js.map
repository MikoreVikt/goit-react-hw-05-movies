{"version":3,"file":"static/js/68.d3dc6579.chunk.js","mappings":"yUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCACVC,EAAW,sCAEXC,EAAmB,mCAAG,8FAC3BH,EAAAA,EAAAA,IAAA,mCAAsCC,IADX,mFAAH,qDAGnBG,EAAiB,mCAAG,WAAMC,GAAN,iFACzBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCJ,IADb,mFAAH,sDAGjBK,EAAgB,mCAAG,WAAMD,GAAN,iFACxBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CJ,IADtB,mFAAH,sDAGhBM,EAAmB,mCAAG,WAAMF,GAAN,iFAC3BL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CJ,EAA9C,YAD2B,mFAAH,sDAGnBO,EAAkB,mCAAG,WAAMC,GAAN,iFAC1BT,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDQ,EAAnD,YAD0B,mFAAH,qD,0FChBlBC,EAAQC,EAAAA,GAAAA,OAAH,4iBA0BLC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,IAAPF,CAAH,yD,SC3BTG,EAAW,WAStB,OACE,SAACJ,EAAD,CAAOK,KAAK,SAASC,QATH,WAClBC,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEb,EAGC,UACE,SAACT,EAAD,KAGL,C,iNCdYU,EAAUX,EAAAA,GAAAA,IAAH,qHAOPY,EAAoBZ,EAAAA,GAAAA,GAAH,sHAOjBa,EAAgBb,EAAAA,GAAAA,GAAH,4IASbc,EAAgBd,EAAAA,GAAAA,GAAH,sWAmBbe,EAAef,EAAAA,GAAAA,IAAH,4DAKZgB,EAAiBhB,EAAAA,GAAAA,EAAH,wK,iKC/CdiB,EAAmBjB,EAAAA,GAAAA,GAAH,8FAOhBkB,EAAmBlB,EAAAA,GAAAA,GAAH,sK,uCCoD7B,EApDqB,WACnB,OAA4CmB,EAAAA,EAAAA,YAA5C,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQ7B,GAAY8B,EAAAA,EAAAA,MAAZ9B,QAkBR,IAhBA+B,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEqB7B,EAAAA,EAAAA,IAAoBF,GAFzC,cAESgC,EAFT,gBAGSL,EAAkBK,EAAIC,KAAKC,SAHpC,uBAIeL,GAAW,GAJ1B,yFAMGM,QAAQC,IAAR,UANH,0DAAD,sDASD,GAAE,CAACpC,KAEJ+B,EAAAA,EAAAA,YAAU,WACRnB,OAAOC,SAAS,CAAEC,IAAK,IAAKE,SAAU,UACvC,GAAE,CAACU,IAECA,EAEL,OACE,UAAC,KAAD,YACE,SAAC,KAAD,uBACA,SAACH,EAAD,UACGG,EAAeW,OAAS,EACvBX,EAAeY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACjB,UAACjB,EAAD,YACE,wBAAKgB,KACL,uBAAIC,MAFiBF,EADN,KAOnB,cACEG,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,MAAO,SAJX,0DAWJ,SAACpC,EAAA,EAAD,KACA,SAACqC,EAAA,EAAD,CAAQlB,QAASA,MAGtB,C","sources":["components/Api/Api.jsx","components/BtnToTop/BtnToTop.styled.jsx","components/BtnToTop/BtnToTop.jsx","pages/MovieCast/MovieCast.styled.jsx","pages/MovieReviews/MovieReviews.styled.jsx","pages/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '14ce8915ef52d801924d89668f2ca827';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\nexport const fetchMovieDetails = async movieId =>\n  await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchCastByMovie = async movieId =>\n  await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n\nexport const fetchReviewsByMovie = async movieId =>\n  await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n\nexport const fetchBySearchMovie = async query =>\n  await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n","import styled from 'styled-components';\nimport { SlArrowUp } from 'react-icons/sl';\n\nexport const UpBtn = styled.button`\n  position: fixed;\n  bottom: 5%;\n  right: 3%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border: none;\n  border-radius: 50%;\n  color: black;\n  background-color: white;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n      rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n      rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  }\n`;\n\nexport const UpBtnIcon = styled(SlArrowUp)`\n  width: 30px;\n  height: 30px;\n`;\n","import { UpBtn, UpBtnIcon } from './BtnToTop.styled';\n\nexport const BtnToTop = () => {\n  const btnSettings = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <UpBtn type=\"button\" onClick={btnSettings}>\n      <UpBtnIcon />\n    </UpBtn>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const MovieDetailsTitle = styled.h2`\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 30px;\n  color: white;\n`;\n\nexport const MovieCastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 40px;\n  width: 80%;\n  padding: 0;\n`;\n\nexport const MovieCastItem = styled.li`\n  margin: 0;\n  padding: 0;\n  color: white;\n  list-style: none;\n  width: 200px;\n  background-color: #740101ba;\n  box-shadow: inset 0 0 30px 1px rgb(0 0 0 / 75%),\n    0 11px 9px -5px rgb(0 0 0 / 75%);\n  border-radius: 5px;\n  overflow: hidden;\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.03;\n  }\n`;\n\nexport const MovieCastImg = styled.img`\n  margin: 0;\n  object-fit: cover;\n`;\n\nexport const MovieActorData = styled.p`\n  padding: 7px 5px;\n  font-size: 15px;\n  font-weight: 700;\n  text-align: center;\n  span {\n    font-size: 12px;\n    font-weight: 400;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MovieReviewsList = styled.ul`\n  width: 80%;\n  padding: 0;\n  margin: 0 auto;\n  list-style: none;\n`;\n\nexport const MovieReviewsItem = styled.li`\n  padding: 20px;\n  border: 1px solid white;\n  border-radius: 10px;\n  color: white;\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsByMovie } from 'components/Api/Api';\nimport { MovieReviewsList, MovieReviewsItem } from './MovieReviews.styled';\nimport { MovieDetailsTitle } from 'pages/MovieCast/MovieCast.styled';\nimport { Wrapper } from 'pages/MovieCast/MovieCast.styled';\nimport { BtnToTop } from 'components/BtnToTop/BtnToTop';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieReviews = () => {\n  const [reviewsByMovie, setReviewsByMovie] = useState();\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async function getReviewsByMovie() {\n      try {\n        const res = await fetchReviewsByMovie(movieId);\n        await setReviewsByMovie(res.data.results);\n        await await setLoading(false);\n      } catch {\n        console.log(`Ooops!`);\n      }\n    })();\n  }, [movieId]);\n\n  useEffect(() => {\n    window.scrollTo({ top: 700, behavior: 'smooth' });\n  }, [reviewsByMovie]);\n\n  if (!reviewsByMovie) return;\n\n  return (\n    <Wrapper>\n      <MovieDetailsTitle>Reviews</MovieDetailsTitle>\n      <MovieReviewsList>\n        {reviewsByMovie.length > 0 ? (\n          reviewsByMovie.map(({ id, author, content }) => (\n            <MovieReviewsItem key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </MovieReviewsItem>\n          ))\n        ) : (\n          <p\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              color: 'white',\n            }}\n          >\n            We don't have any reviews for this movie!\n          </p>\n        )}\n      </MovieReviewsList>\n      <BtnToTop />\n      <Loader loading={loading} />\n    </Wrapper>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["axios","API_KEY","IMG_PATH","fetchTrendingMovies","fetchMovieDetails","movieId","fetchCastByMovie","fetchReviewsByMovie","fetchBySearchMovie","query","UpBtn","styled","UpBtnIcon","SlArrowUp","BtnToTop","type","onClick","window","scrollTo","top","left","behavior","Wrapper","MovieDetailsTitle","MovieCastList","MovieCastItem","MovieCastImg","MovieActorData","MovieReviewsList","MovieReviewsItem","useState","reviewsByMovie","setReviewsByMovie","loading","setLoading","useParams","useEffect","res","data","results","console","log","length","map","id","author","content","style","display","justifyContent","color","Loader"],"sourceRoot":""}