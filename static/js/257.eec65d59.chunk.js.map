{"version":3,"file":"static/js/257.eec65d59.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '14ce8915ef52d801924d89668f2ca827';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\nexport const fetchMovieDetails = async movieId =>\n  await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchCastByMovie = async movieId =>\n  await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n\nexport const fetchReviewsByMovie = async movieId =>\n  await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n\nexport const fetchBySearchMovie = async query =>\n  await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  padding: 5px 10px;\n  margin: 30px;\n  width: 80px;\n  height: 30px;\n  border: 2px solid black;\n  border-radius: 5px;\n  border-color: black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  transition: all 200ms linear;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n  }\n`;\n\nexport const MovieDetailsImg = styled.img`\n  width: 300px;\n  height: 450px;\n  border-radius: 5px;\n  border: 1px solid black;\n`;\n\nexport const MovieName = styled.h2`\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const MovieDetailsTitle = styled.h3`\n  margin-bottom: 15px;\n  color: white;\n`;\n\nexport const MovieUserScore = styled.p`\n  font-size: 18px;\n  margin-bottom: 20px;\n  color: white;\n  span {\n    margin-right: 8px;\n  }\n`;\n\nexport const MovieDetailsData = styled.p`\n  font-size: 18px;\n  margin-bottom: 40px;\n  color: white;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  GoBackLink,\n  MovieDetailsImg,\n  MovieName,\n  MovieUserScore,\n  MovieDetailsTitle,\n  MovieDetailsData,\n} from './MovieDetails.styled';\nimport { StyledLink } from 'components/AppBar/AppBar.styled';\nimport { fetchMovieDetails, IMG_PATH } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const [loading] = useState(true);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async function getFilmById() {\n      try {\n        const res = await fetchMovieDetails(movieId);\n        await setMovieData(res.data);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      } catch {\n        console.log(`Oops! Something went wrong! Try again!`);\n      }\n    })();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieData;\n\n  if (!release_date) return;\n\n  return (\n    <>\n      <GoBackLink to={location.state?.from ?? '/'}>Go back</GoBackLink>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '30px',\n        }}\n      >\n        <MovieDetailsImg src={IMG_PATH + poster_path} alt={original_title} />\n        <div style={{ maxWidth: '500px', marginLeft: '30px' }}>\n          <MovieName>\n            {original_title + ` (${new Date(release_date).getFullYear()})`}\n          </MovieName>\n          <MovieUserScore>\n            User score: {Math.round(vote_average * 10)}%\n          </MovieUserScore>\n          <MovieDetailsTitle>Overview</MovieDetailsTitle>\n          <MovieDetailsData>{overview}</MovieDetailsData>\n          <MovieDetailsTitle>Genres</MovieDetailsTitle>\n          <MovieDetailsData>\n            {genres.map(genre => genre.name).join(', ')}\n          </MovieDetailsData>\n          <div>\n            <MovieDetailsTitle>Additional information</MovieDetailsTitle>\n            <div style={{ display: 'flex', columnGap: '20px' }}>\n              <StyledLink\n                to=\"cast\"\n                state={{ from: location.state?.from ?? '/' }}\n              >\n                Cast\n              </StyledLink>\n              <StyledLink\n                to=\"reviews\"\n                state={{ from: location.state?.from ?? '/' }}\n              >\n                Reviews\n              </StyledLink>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Suspense fallback={<Loader loading={loading} />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","IMG_PATH","fetchTrendingMovies","fetchMovieDetails","movieId","fetchCastByMovie","fetchReviewsByMovie","fetchBySearchMovie","query","GoBackLink","styled","Link","MovieDetailsImg","MovieName","MovieDetailsTitle","MovieUserScore","MovieDetailsData","useState","movieData","setMovieData","loading","useParams","location","useLocation","useEffect","res","data","window","scrollTo","top","behavior","console","log","poster_path","original_title","release_date","vote_average","overview","genres","to","state","from","style","display","justifyContent","marginBottom","src","alt","maxWidth","marginLeft","Date","getFullYear","Math","round","map","genre","name","join","columnGap","Suspense","fallback","Loader"],"sourceRoot":""}