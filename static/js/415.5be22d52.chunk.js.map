{"version":3,"file":"static/js/415.5be22d52.chunk.js","mappings":"uIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C,gIC7BaC,EAAU,mCACVC,EAAW,+BAEXC,EAAW,sCAEXC,EAAmB,6BAAG,+GAERC,MAAM,GAAD,OACvBH,EADuB,uCACgBD,IAHb,cAEzBK,EAFyB,OAKzBC,EAAOD,EAASE,OALS,kBAMxBD,GANwB,gCAQ/BE,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAgB,6BAAG,WAAMC,GAAN,kGAELP,MAAM,GAAD,OAjBE,4CAiBF,oBACOJ,EADP,kBACwBW,IAHxB,cAEtBN,EAFsB,OAMtBC,EAAOD,EAASE,OANM,kBAOrBD,GAPqB,gCAS5BE,QAAQC,IAAR,MAT4B,yDAAH,sDAahBG,EAAc,6BAAG,WAAOC,EAAS5B,GAAhB,4EACxBoB,EAAW,CAAC,EADY,SAGb,KAATpB,EAHsB,gCAIPmB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBY,EAAtB,oBAAyCb,IAJvC,OAIxBK,EAJwB,+CAMPD,MAAM,GAAD,OACjBH,EADiB,kBACCY,EADD,YACY5B,EADZ,oBAC4Be,IAP1B,QAMxBK,EANwB,sBAWpBC,EAAOD,EAASE,OAXI,kBAYnBD,GAZmB,kCAc1BE,QAAQC,IAAR,MAd0B,0DAAH,uD,kHC3BdK,EAAUC,EAAAA,GAAAA,GAAH,0IASPC,EAAYD,EAAAA,GAAAA,GAAH,kOAaTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kDAITI,EAAaJ,EAAAA,GAAAA,EAAH,2H,SCzBVK,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAIF,EAAUG,UAAY,GAI1B,OACE,SAACV,EAAD,UACGO,EAAUI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OACb,SAACZ,EAAD,WACE,UAACC,EAAD,CAAWY,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAA/C,WACE,gBACEU,IAAK9B,EAAAA,GAAW0B,EAChBK,IAAKN,EACLO,MAAO,IACPC,OAAQ,OAEV,SAAChB,EAAD,UAAaQ,QARDD,EADH,KAepB,C,mFCZD,UAZa,WACX,OAAsCU,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRpC,EAAAA,EAAAA,MAAsBb,MAAK,SAAAkD,GACzBF,EAAeE,EAAIhB,QACpB,GACF,GAAE,KAEI,SAAC,IAAD,CAAWH,UAAWgB,GAC9B,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Api/Api.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const API_KEY = '14ce8915ef52d801924d89668f2ca827';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const FETCH_BY_NAME_PATH = 'https://api.themoviedb.org/3/search/movie';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const response = await fetch(\n      `${FETCH_BY_NAME_PATH}?api_key=${API_KEY}&query=${query}`\n    );\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieInfo = async (movieId, info) => {\n  let response = {};\n  try {\n    if (info === '') {\n      response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    } else {\n      response = await fetch(\n        `${BASE_URL}/movie/${movieId}/${info}?api_key=${API_KEY}`\n      );\n    }\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n  margin: 40px 0;\n  gap: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 240px;\n  background-color: #940000ba;\n  border-radius: 5px;\n  overflow: hidden;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.1;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  padding: 10px;\n  color: white;\n  font-size: 15px;\n  font-weight: 700;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { IMG_PATH } from 'components/Api/Api';\nimport { MovieUl, MovieItem, MovieLink, MovieTitle } from './MovieList.styled';\n\nexport const MovieList = ({ moviesArr }) => {\n  const location = useLocation();\n\n  if (moviesArr.results === []) {\n    return;\n  }\n\n  return (\n    <MovieUl>\n      {moviesArr.map(({ id, original_title, poster_path }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={IMG_PATH + poster_path}\n              alt={original_title}\n              width={240}\n              height={320}\n            />\n            <MovieTitle>{original_title}</MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieUl>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'components/Api/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(res => {\n      setTrendMovies(res.results);\n    });\n  }, []);\n\n  return <MovieList moviesArr={trendMovies} />;\n};\n\nexport default Home;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","IMG_PATH","fetchTrendingMovies","fetch","response","data","json","console","log","fetchMovieByName","query","fetchMovieInfo","movieId","MovieUl","styled","MovieItem","MovieLink","Link","MovieTitle","MovieList","moviesArr","location","useLocation","results","map","id","original_title","poster_path","to","state","from","src","alt","width","height","useState","trendMovies","setTrendMovies","useEffect","res"],"sourceRoot":""}