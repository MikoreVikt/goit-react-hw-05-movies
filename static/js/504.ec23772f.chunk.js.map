{"version":3,"file":"static/js/504.ec23772f.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/MoviesSearch/MoviesSearch.styled.jsx","components/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '14ce8915ef52d801924d89668f2ca827';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const FETCH_BY_NAME_PATH = 'https://api.themoviedb.org/3/search/movie';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n\nexport const fetchMovieDetails = async movieId =>\n  await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchCastByMovie = async movieId =>\n  await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n\nexport const fetchReviewsByMovie = async movieId =>\n  await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n\nexport const fetchBySearchMovie = async query =>\n  await axios.get(\n    `${BASE_URL}/search/movie/?api_key=${API_KEY}&query=${query}&page=${1}`\n  );\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n  margin: 40px 0;\n  gap: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 240px;\n  background-color: #740101ba;\n  box-shadow: inset 0 0 30px 1px rgb(0 0 0 / 75%),\n    0 11px 9px -5px rgb(0 0 0 / 75%);\n  border-radius: 5px;\n  overflow: hidden;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.1;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  padding: 10px;\n  color: white;\n  font-size: 15px;\n  font-weight: 700;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { IMG_PATH } from 'components/Api/Api';\nimport { MovieUl, MovieItem, MovieLink, MovieTitle } from './MovieList.styled';\nimport defaultMovieLogo from '../../images/logo-movie-tape-cinema.png';\n\nexport const MovieList = ({ moviesArr }) => {\n  const location = useLocation();\n\n  if (moviesArr === []) return;\n\n  return (\n    <MovieUl>\n      {moviesArr.map(({ id, original_title, original_name, poster_path }) => {\n        return (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              {poster_path ? (\n                <img\n                  src={IMG_PATH + poster_path}\n                  alt={original_title}\n                  width={240}\n                  height={320}\n                />\n              ) : (\n                <img\n                  src={defaultMovieLogo}\n                  alt=\"defaulLogo\"\n                  width={240}\n                  height={320}\n                />\n              )}\n              <MovieTitle>{original_title || original_name}</MovieTitle>\n            </MovieLink>\n          </MovieItem>\n        );\n      })}\n    </MovieUl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nexport const SearchTitle = styled.h2`\n  text-transform: uppercase;\n  margin-bottom: 30px;\n  color: white;\n`;\n\nexport const SearchForm = styled.form`\n  position: relative;\n  margin-bottom: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  min-width: 250px;\n  height: 30px;\n  font-size: 16px;\n  padding: 5px 30px 5px 10px;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid white;\n  transition: border-color 250ms linear;\n  &:hover,\n  &:focus {\n    outline: none;\n    border: none;\n    border-bottom: 2px solid white;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  top: 50%;\n  right: -10px;\n  transform: translateY(-50%);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 5px 10px;\n  color: white;\n  transition: color 250ms linear;\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { fetchBySearchMovie } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport {\n  Wrapper,\n  SearchTitle,\n  SearchInput,\n  SearchForm,\n  SearchButton,\n} from './MoviesSearch.styled';\n\nconst MoviesSearch = () => {\n  const [query, setQuery] = useState('');\n  const [requestedMovies, setRequestedMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const savedQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!savedQuery) {\n      setRequestedMovies([]);\n      setLoading(false);\n      return;\n    }\n    (async function getSearchQuery() {\n      try {\n        const res = await fetchBySearchMovie(savedQuery);\n        await setRequestedMovies(res.data.results);\n        await setLoading(false);\n      } catch {\n        console.log('Oops! Something went wrong! Try again!');\n      }\n    })();\n  }, [savedQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    if (!query.trim() || savedQuery === query.trim().toLowerCase()) {\n      setQuery('');\n      setLoading(false);\n      return;\n    }\n    setSearchParams({ query: query.trim().toLowerCase() });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <SearchTitle>Movie search</SearchTitle>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchInput\n            onChange={e => {\n              setQuery(e.target.value);\n            }}\n            value={query}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Enter a search query\"\n          />\n          <SearchButton type=\"submit\">\n            <AiOutlineSearch />\n          </SearchButton>\n        </SearchForm>\n      </Wrapper>\n      <MovieList moviesArr={requestedMovies} />\n      <Loader loading={loading} />\n    </>\n  );\n};\n\nexport default MoviesSearch;\n"],"names":["API_KEY","BASE_URL","IMG_PATH","fetchTrendingMovies","axios","fetchMovieDetails","movieId","fetchCastByMovie","fetchReviewsByMovie","fetchBySearchMovie","query","MovieUl","styled","MovieItem","MovieLink","Link","MovieTitle","MovieList","moviesArr","location","useLocation","map","id","original_title","original_name","poster_path","to","state","from","src","alt","width","height","defaultMovieLogo","Wrapper","SearchTitle","SearchForm","SearchInput","SearchButton","useState","setQuery","requestedMovies","setRequestedMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","savedQuery","get","useEffect","res","data","results","console","log","onSubmit","e","preventDefault","trim","toLowerCase","onChange","target","value","type","autoComplete","autoFocus","placeholder","Loader"],"sourceRoot":""}